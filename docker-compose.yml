version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hotels
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=hotels
      - POOL_SIZE=20
      - MAX_OVERFLOW=30
      - POOL_TIMEOUT=30
    command: ["api"]
    depends_on:
      db:
        condition: service_healthy

  scraper:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=hotels
      - POOL_SIZE=20
      - MAX_OVERFLOW=30
      - POOL_TIMEOUT=30
    command: ["scraper"]
    depends_on:
      - app
    deploy:
      restart_policy:
        condition: none

volumes:
  postgres_data: 